language: cpp
# Important: Travis sets the CC and CXX environment variables according to the compiler you select. https://docs.travis-ci.com/user/languages/cpp/#choosing-compilers-to-test-against

sudo: false

matrix:
  include:
# GCC versions for Xenial/Bionic are given here: https://docs.travis-ci.com/user/languages/cpp/#gcc-on-linux
# Likewise for Clang: https://docs.travis-ci.com/user/languages/cpp/#clang-on-linux
    - name: "GCC 5.4.0 on Xenial (16.04 LTS)"
      os: linux
      dist: xenial
      compiler: gcc
    - name: "Clang 7 on Xenial (16.04 LTS)"
      os: linux
      dist: xenial
      compiler: clang
    - name: "Clang 7 on Bionic (18.04 LTS)"
      os: linux
      dist: bionic
      compiler: clang
    - name: "GCC 7.5.0 and Java 8 on Bionic (18.04 LTS)"
      os: linux
      dist: bionic
      language: java
      jdk: openjdk8
      env:
        - MATRIX_EVAL="CC=gcc && CXX=g++"  # This is not actually useful, but we print these vars in before_install.
        - USING_JAVA  # We don't check the value, only whether the var is set
# For the mac builds, info about installing GCC is from here: https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-on-macos
# Likewise, info for clang is from here: https://docs.travis-ci.com/user/languages/cpp/#clang-on-macos
# macOS 10.14 or newer should have a sufficient version of Python installed already.
    - name: "AppleClang 11 on macOS 10.14"
      os: osx
      osx_image: xcode11
      compiler: clang
    - name: "GCC 9, Java 8, and GHC on macOS 10.15"
      os: osx
      osx_image: xcode12.2
      addons:
        homebrew:
          packages:
            - gcc@9
            - ghc
          taps:
            - AdoptOpenJDK/openjdk
          casks:
            - adoptopenjdk8
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
        - USING_JAVA
        - ADOPTOPENJDK
        - USING_HASKELL
# Info about installing openjdk 8 for macos is from these sources:
# https://docs.travis-ci.com/user/installing-dependencies/#installing-from-taps
# https://stackoverflow.com/a/55835094
# https://github.com/AdoptOpenJDK/homebrew-openjdk


before_install:
  - eval "${MATRIX_EVAL}"
  - echo "CC:" $CC
  - $CC --version
  - echo "CXX:" $CXX
  - $CXX --version
  - cmake --version
  - make --version
  - python3 --version

# For 'language: cpp' there is no install phase: https://docs.travis-ci.com/user/languages/cpp/#dependency-management
# That's fine because we've already taken care of dependencies above.

script:
  - echo "CC and CXX:" $CC $CXX
  - mkdir debug
  - cd debug
  - cmake .. -DCMAKE_BUILD_TYPE=Debug
  - cmake --build . --target all
  - ./runtest
  - python3 ../test/integration_tests.py escape
  - cd ..
  - mkdir release
  - cd release
  - cmake .. -DCMAKE_BUILD_TYPE=Release
  - cmake --build . --target all
  - ./runtest
  - python3 ../test/integration_tests.py escape
  - cd ..
  - if [ -z ${ADOPTOPENJDK+foo} ]; then echo 'Not sourcing use_adoptopenjdk.sh'; else . ./java/ci/use_adoptopenjdk.sh; fi
  - if [ -z ${USING_JAVA+foo} ]; then echo 'Not running Java tests'; else ./java/ci/ciscript.sh; fi
  - if [ -z ${USING_HASKELL+foo} ]; then echo 'Not running Haskell tests'; else ./haskell/ci/ciscript.sh; fi
# The lines to check for env vars are from here: https://stackoverflow.com/a/13864829
